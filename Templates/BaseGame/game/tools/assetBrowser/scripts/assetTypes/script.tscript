AssetBrowser::registerFileType("ScriptFileType", "Script", ".tscript;.cs;.dso");
AssetBrowser::registerAssetType("ScriptAsset", "Scripts");

function AssetBrowser::createScriptAsset(%this)
{
   %moduleName = AssetBrowser.newAssetSettings.moduleName;
   %modulePath = "data/" @ %moduleName;
      
   %assetName = AssetBrowser.newAssetSettings.assetName;  
   
   %assetPath = NewAssetTargetAddress.getText() @ "/";    
   
   %tamlpath = %assetPath @ %assetName @ ".asset.taml";
   %scriptPath = %assetPath @ %assetName @ "." @ $TorqueScriptFileExtension;
   
   %asset = new ScriptAsset()
   {
      AssetName = %assetName;
      versionId = 1;
      scriptFile = %assetName @ "." @ $TorqueScriptFileExtension;
   };
   
   TamlWrite(%asset, %tamlpath);
   
   %moduleDef = ModuleDatabase.findModule(%moduleName, 1);
	AssetDatabase.addDeclaredAsset(%moduleDef, %tamlpath);
	
	%file = new FileObject();
   
   if(%file.openForWrite(%scriptPath))
	{
		%file.close();
	}
   
	return %tamlpath;
}

function AssetBrowser::editScriptAsset(%this, %assetDef)
{
   %scriptFile = %assetDef.scriptFile;
   
   //EditorOpenFileInTorsion(makeFullPath(%scriptFile), 0);
}

function AssetBrowser::duplicateScriptAsset(%this, %assetDef, %targetModule)
{
}

function AssetBrowser::importScriptAsset(%this, %assetId)
{
}

function AssetBrowser::onScriptAssetEditorDropped(%this, %assetDef, %position)
{

}

//Renames the asset
function AssetBrowser::renameScriptAsset(%this, %assetDef, %newAssetName)
{
   %newFilename = renameAssetLooseFile(%assetDef.scriptFile, %newAssetName);
   
   if(!%newFilename $= "")
      return;

   %assetDef.scriptFile = %newFilename;
   %assetDef.saveAsset();
   
   renameAssetFile(%assetDef, %newAssetName);
}

//Moves the asset to a new path/module
function AssetBrowser::moveScriptAsset(%this, %assetDef, %destination)
{
   %currentModule = AssetDatabase.getAssetModule(%assetDef.getAssetId());
   %targetModule = AssetBrowser.dirHandler.getModuleFromAddress(%destination);
   
   %newAssetPath = moveAssetFile(%assetDef, %destination);
   
   if(%newAssetPath $= "")
      return false;

   moveAssetLooseFile(%assetDef.getScriptPath(), %destination);
   
   AssetDatabase.removeDeclaredAsset(%assetDef.getAssetId());
   AssetDatabase.addDeclaredAsset(%targetModule, %newAssetPath);
}

function ScriptAsset::buildBrowserElement(%assetDef, %previewData)
{
   %previewData.assetName = %assetDef.assetName;
   %previewData.assetPath = %assetDef.fileName;
   %previewData.doubleClickCommand = "systemCommand(\"start \\\"\\\" \\\"" @ %assetDef.fileName @ "\\\"\");";
   
   /*if(%assetDef.isServerSide)
      %previewData.previewImage = "ToolsModule:serverScriptIcon_image";
   else
      %previewData.previewImage = "ToolsModule:clientScriptIcon_image";*/
   %previewData.previewImage = "ToolsModule:clientScriptIcon_image";
   
   %previewData.assetFriendlyName = %assetDef.assetName;
   %previewData.assetDesc = %assetDef.fileName;
   %previewData.tooltip = "Script Asset: " @ %assetDef.getAssetId() @ "\n" @ 
                          "File path: " @ %assetDef.fileName;
}

function ScriptFileType::buildBrowserElement(%filePath, %previewData)
{
   %previewData.assetName = fileName(%filePath);
   %previewData.assetPath = %filePath;
   %previewData.doubleClickCommand = "systemCommand(\"start \\\"\\\" \\\"" @ %filePath @ "\\\"\");";
   
   /*if(%assetDef.isServerSide)
      %previewData.previewImage = "ToolsModule:serverScriptIcon_image";
   else
      %previewData.previewImage = "ToolsModule:clientScriptIcon_image";*/
   %previewData.previewImage = "ToolsModule:clientScriptIcon_image";
   
   %previewData.assetFriendlyName = %previewData.assetName;
   %previewData.assetDesc = %filePath;
   %previewData.tooltip = "Script File: " @ %filePath;
}

function GuiInspectorTypeScriptAssetPtr::onClick( %this, %fieldName )
{
   //Get our data
   %obj = %this.getInspector().getInspectObject(0);
}